Neste programa desejamos testar se nossa ram cumpre suas duas funções básicas: armazenar e ter seus dados lidos.
Para isso codificamos as seguintes etapas:

1. Carregar registradores com constantes;
2. Escrever estas constantes na ram (em endereços especificados);
3. Zerar os registradores;
4. Carregar registradores com endereços;
5. Acessamos a ram nestes endereços e armazenamos os dados lidos em novos registradores;
6. Escrevemos na ram um dado, com endereço armazenado em um registrador;

-- CARREGANDO REGS COM CONSTANTES
MOV R1, #51     0001 001 000110011
MOV R2, #32	    0001 010 000100000
MOV R3, #11	    0001 011 000001011
MOV R4, #23	    0001 100 000010111
MOV R5, #72	    0001 101 001001000
MOV R6, #10	    0001 110 000001010
MOV R7, #20	    0001 111 000010100

-- ESCREVENDO CONSTANTES NA RAM
MOV 000, R1 	0111 00 0000000 001
MOV 007, R2	    0111 00 0000111 010
MOV 014, R3	    0111 00 0001110 011
MOV 021, R4	    0111 00 0010101 100
MOV 028, R5	    0111 00 0011100 101
MOV 035, R6	    0111 00 0100011 110
MOV 041, R7	    0111 00 0101001 111

-- ZERANDO REGISTRADORES
MOV R1, #0      0001 001 000000000
MOV R2, #0	    0001 010 000000000
MOV R3, #0	    0001 011 000000000
MOV R4, #0	    0001 100 000000000
MOV R5, #0	    0001 101 000000000
MOV R6, #0	    0001 110 000000000
MOV R7, #0	    0001 111 000000000

-- CARREGANDO REGISTRADORES COM ENDERECOS
MOV R1, 000	    0001 001 000000000
MOV R2, 007	    0001 010 000000111
MOV R3, 014	    0001 011 000001110 

-- LEITURA DE ENDEREÇOS NA RAM 
MOV R4, [R1]	1000 100 001 000000
MOV R5, [R2]    1000 101 010 000000
MOV R6, [R3]    1000 110 011 000000

-- CARREGANDO REGISTRADORES COM ENDERECOS
MOV R1, 021	    0001 001 000010101 
MOV R2, 028	    0001 010 000011100 
MOV R3, 035	    0001 011 000100011 

-- LEITURA DE ENDEREÇOS NA RAM 
MOV R4, [R1]    1000 100 001 000000
MOV R5, [R2]    1000 101 010 000000
MOV R6, [R3]    1000 110 011 000000

-- CARREGANDO REGISTRADORES COM ENDERECOS
MOV R1, 041 	0001 001 000101001 

-- LEITURA DE ENDEREÇOS NA RAM 
MOV R7, [R1]    1000 111 001 000000

-- CARREGANDO REG 1 COM VALOR 1
MOV R1, #1      0001 001 000000001

--CARREGAR NO "ENDEREÇO" 1, VALOR 1
MOV [R1], R1    0111 01 0000 010 001 

-- LEITURA DE ENDEREÇO NA RAM
MOV R7, [R1]    1000 111 001 000000



Sequência do teste acima, basta incluir no arquivo rom:

        -- loading registers with constants
        0 => "0001" & "001" & "000110011",      
        1 => "0001" & "010" & "000100000",       
        2 => "0001" & "011" & "000001011", 
        3 => "0001" & "100" & "000010111", 
        4 => "0001" & "101" & "001001000",  
        5 => "0001" & "110" & "000001010", 
        6 => "0001" & "111" & "000010100", 
        
        -- storing constants in ram
        7 => "0111" & "00" & "0000000" & "001",      
        8 => "0111" & "00" & "0000111" & "010",
        9 => "0111" & "00" & "0001110" & "011",
        10 => "0111" & "00" & "0010101" & "100",
        11 => "0111" & "00" & "0011100" & "101",
        12 => "0111" & "00" & "0100011" & "110",
        13 => "0111" & "00" & "0101001" & "111",
                
        -- restarting registers
        14 => "0001" & "001" & "000000000",      
        15 => "0001" & "010" & "000000000",       
        16 => "0001" & "011" & "000000000", 
        17 => "0001" & "100" & "000000000", 
        18 => "0001" & "101" & "000000000",  
        19 => "0001" & "110" & "000000000", 
        20 => "0001" & "111" & "000000000",     
        
        -- charging registers with address
        21 => "0001" & "001" & "000000000",      
        22 => "0001" & "010" & "000000111",       
        23 => "0001" & "011" & "000001110",
                
        -- reading ram addresses
        24 => "1000" & "100" & "001" & "000000",      
        25 => "1000" & "101" & "010" & "000000",       
        26 => "1000" & "110" & "011" & "000000",
                
        -- charging registers with address
        27 => "0001" & "001" & "000010101",      
        28 => "0001" & "010" & "000011100",       
        29 => "0001" & "011" & "000100011",
                
        -- reading ram addresses
        30 => "1000" & "100" & "001" & "000000",      
        31 => "1000" & "101" & "010" & "000000",       
        32 => "1000" & "110" & "011" & "000000",
        
        -- charging register with address
        33 => "0001" & "001" & "000101001",

        -- reading ram address
        34 => "1000" & "111" & "001" & "000000",

        -- testing feature
        35 => "0001" & "001" & "000000001",
        36 => "0111" & "01" & "0000" & "001" & "001",
        37 => "1000" & "111" & "001" & "000000",

